[{"C:\\Users\\eutimio\\Desktop\\DesktopReact\\talk-text-app\\src\\index.js":"1","C:\\Users\\eutimio\\Desktop\\DesktopReact\\talk-text-app\\src\\App.js":"2","C:\\Users\\eutimio\\Desktop\\DesktopReact\\talk-text-app\\src\\reportWebVitals.js":"3","C:\\Users\\eutimio\\Desktop\\DesktopReact\\talk-text-app\\src\\serviceWorker.js":"4","C:\\Users\\eutimio\\Desktop\\DesktopReact\\Talk-Text-App\\src\\index.js":"5","C:\\Users\\eutimio\\Desktop\\DesktopReact\\Talk-Text-App\\src\\serviceWorker.js":"6","C:\\Users\\eutimio\\Desktop\\DesktopReact\\Talk-Text-App\\src\\reportWebVitals.js":"7","C:\\Users\\eutimio\\Desktop\\DesktopReact\\Talk-Text-App\\src\\App.js":"8"},{"size":578,"mtime":1610673737267,"results":"9","hashOfConfig":"10"},{"size":1931,"mtime":1610677455620,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":5481,"mtime":1610673717676,"results":"13","hashOfConfig":"10"},{"size":578,"mtime":1610673737267,"results":"14","hashOfConfig":"15"},{"size":5481,"mtime":1610673717676,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"15"},{"size":1931,"mtime":1610677455620,"results":"18","hashOfConfig":"15"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"8584ao",{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"21"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1xd9sn9",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\eutimio\\Desktop\\DesktopReact\\talk-text-app\\src\\index.js",[],["38","39"],"C:\\Users\\eutimio\\Desktop\\DesktopReact\\talk-text-app\\src\\App.js",["40"],"import React, { useState, useEffect } from 'react'\nimport './App.css'\n\nconst SpeechRecognition =\n  window.SpeechRecognition || window.webkitSpeechRecognition\nconst mic = new SpeechRecognition()\n\nmic.continuous = true\nmic.interimResults = true\nmic.lang = 'en-US'\n\nfunction App() {\n  const [isListening, setIsListening] = useState(false)\n  const [note, setNote] = useState(null)\n  const [savedNotes, setSavedNotes] = useState([])\n// eslint-disable-next-line\n  useEffect(() => {\n    handleListen()\n  }, [isListening])\n\n  const handleListen = () => {\n    if (isListening) {\n      mic.start()\n      mic.onend = () => {\n        console.log('continue..')\n        mic.start()\n      }\n    } else {\n      mic.stop()\n      mic.onend = () => {\n        console.log('Stopped Mic on Click')\n      }\n    }\n    mic.onstart = () => {\n      console.log('Mics on')\n    }\n\n    mic.onresult = event => {\n      const transcript = Array.from(event.results)\n        .map(result => result[0])\n        .map(result => result.transcript)\n        .join('')\n      console.log(transcript)\n      setNote(transcript)\n      mic.onerror = event => {\n        console.log(event.error)\n      }\n    }\n  }\n\n  const handleSaveNote = () => {\n    setSavedNotes([...savedNotes, note])\n    setNote('')\n  }\n\n  return (\n    <>\n      <h1>Voice Notes</h1>\n      <div className=\"container\">\n        <div className=\"box\">\n          <h2>Current Note</h2>\n          {isListening ? <span>üéôÔ∏è</span> : <span>üõëüéôÔ∏è</span>}\n          <button onClick={handleSaveNote} disabled={!note}>\n            Save Note\n          </button>\n          <button onClick={() => setIsListening(prevState => !prevState)}>\n            Start/Stop\n          </button>\n          <p>{note}</p>\n        </div>\n        <div className=\"box\">\n          <h2>Notes</h2>\n          {savedNotes.map(n => (\n            <p key={n}>{n}</p>\n          ))}\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default App\n","C:\\Users\\eutimio\\Desktop\\DesktopReact\\talk-text-app\\src\\reportWebVitals.js",[],"C:\\Users\\eutimio\\Desktop\\DesktopReact\\talk-text-app\\src\\serviceWorker.js",[],["41","42"],"C:\\Users\\eutimio\\Desktop\\DesktopReact\\Talk-Text-App\\src\\index.js",[],"C:\\Users\\eutimio\\Desktop\\DesktopReact\\Talk-Text-App\\src\\serviceWorker.js",[],"C:\\Users\\eutimio\\Desktop\\DesktopReact\\Talk-Text-App\\src\\reportWebVitals.js",[],"C:\\Users\\eutimio\\Desktop\\DesktopReact\\Talk-Text-App\\src\\App.js",["43"],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":19,"column":6,"nodeType":"50","endLine":19,"endColumn":19,"suggestions":"51"},{"ruleId":"44","replacedBy":"52"},{"ruleId":"46","replacedBy":"53"},{"ruleId":"48","severity":1,"message":"49","line":19,"column":6,"nodeType":"50","endLine":19,"endColumn":19,"suggestions":"54"},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleListen'. Either include it or remove the dependency array.","ArrayExpression",["57"],["55"],["56"],["58"],"no-global-assign","no-unsafe-negation",{"desc":"59","fix":"60"},{"desc":"59","fix":"61"},"Update the dependencies array to be: [handleListen, isListening]",{"range":"62","text":"63"},{"range":"64","text":"63"},[500,513],"[handleListen, isListening]",[500,513]]